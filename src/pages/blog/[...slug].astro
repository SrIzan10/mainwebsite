---
import BlogPost from '../../layouts/BlogPost.astro'
import { ghostClient } from '../../lib/ghost'
import type { PostOrPage } from '@tryghost/content-api'
import * as shiki from 'shiki'
import { JSDOM } from 'jsdom'

export async function getStaticPaths() {
  const posts = await ghostClient.posts.browse({
    limit: 'all',
  })
  return posts.map((post) => {
    return {
      params: {
        slug: post.slug,
      },
      props: {
        post: post,
      },
    }
  })
}
const { post } = Astro.props as { post: PostOrPage }

// parse the post.html content, get the code blocks and highlight them
const doc = new JSDOM(post.html!)
const codeBlocks = doc.window.document.querySelectorAll('code')
for (const codeBlock of codeBlocks) {
  if (!codeBlock.className) continue
  const language = codeBlock.className.replace('language-', '')
  const code = codeBlock.textContent
  const rendered = await shiki.codeToHtml(code!, {
    lang: language,
    theme: 'tokyo-night',
  })
  codeBlock.innerHTML = rendered
}
---

<BlogPost {...post}>
  <Fragment set:html={doc.serialize()} />
</BlogPost>
