[{"id":2,"title":"My tales of MongoDB migration","description":"Here I ramble about the last service migration I did, MongoDB, and all the difficulties that came with it.","date":"12/11/2023","fileContent":"\r\n## Introduction\r\n\r\nSo, the last few months I've been migrating services from my good old Raspberry Pi into my new HP server and the last service I migrated was MongoDB.\r\n\r\nI've been using MongoDB for a while now and I've been using it for a few things, like my discord bots, [webhooks-ui](https://github.com/SrIzan10/webhooks-ui) and probably other projects I don't remember right now.\r\n\r\nSo, let's get started!\r\n\r\n## Testing the plan\r\n\r\nMy database instance is on Docker with a replica set of 1 node (itself) so [Prisma](https://www.prisma.io/) works.\r\n\r\nMy idea is to add the HP server as a secondary replica and then promote it to be the primary one, but I don't know if that will work, so we need to test some stuff.\r\n\r\nI first created 2 docker containers on my [main Ryzen machine](https://gist.github.com/SrIzan10/50bc2ba689a4cc43bcbac2799cc733c9)'s WSL Ubuntu instance.\r\n\r\nI created a `docker-compose.yml` file with the following content:\r\n\r\n```yml\r\nversion: \"3.8\"\r\nservices:\r\n  mongo1:\r\n    image: mongo:4.4.17-rc0-focal\r\n    container_name: mongo1\r\n    restart: always\r\n    ports:\r\n      - 27017:27017\r\n    volumes:\r\n      - ./mongo1:/data/db\r\n    command: mongod --replSet mongoset\r\n    networks:\r\n      - mongo\r\n  mongo2:\r\n    image: mongo:4.4.17-rc0-focal\r\n    container_name: mongo2\r\n    restart: always\r\n    ports:\r\n      - 27018:27017\r\n    volumes:\r\n      - ./mongo2:/data/db\r\n    command: mongod --replSet mongoset\r\n    networks:\r\n      - mongo\r\nnetworks:\r\n  mongo:\r\n```\r\n\r\nand ran it with `docker compose up -d`.\r\n\r\nI went to connect with MongoDB Compass and it didn't work for some reason. I asked GPT and nothing. It looks like it accepted the connection but it won't connect, so I installed `mongosh` and tried to connect with that.\r\n\r\n```bash\r\n$ mongosh mongodb://localhost:27017\r\n```\r\n...and it worked! That didn't make any sense, but okay, we can work with it.\r\n\r\nI then connected to the `mongo1` instance and ran the following commands:\r\n\r\n```bash\r\n> rs.initiate()\r\n```\r\nand it worked, but only that same database connected. Before adding the second database to the replica, I went ahead and pinged it from the first container (just to check if the network configuration worked):\r\n\r\n```bash\r\ndocker exec mongo1 sh -c \"rm /bin/ping;apt update;apt install inetutils-ping -y;ping mongo2\"\r\n```\r\n\r\nI removed /bin/ping because I tried to transfer the binary from WSL to the container but it still needed some libraries and I didn't want to bother, so I just installed the package.\r\n\r\nIt worked, so I went ahead and added the second database to the replica set:\r\n\r\n```bash\r\n> rs.add(\"mongo2\")\r\n```\r\n\r\nAfter waiting for it, the second database connected and everything was working fine. Let's create a collection and some documents on the primary replica (mongo1):\r\n\r\n```bash\r\n> use test\r\n> db.createCollection(\"test\")\r\n> db.test.insertOne({ name: \"test\" })\r\n```\r\n\r\nand then, let's check if it's on the second replica (mongo2):\r\n\r\n```bash\r\n$ mongosh mongodb://localhost:27017\r\n```\r\n\r\n```bash\r\n> use test\r\n> db.getMongo().setReadPref(\"secondaryPreferred\")\r\n> db.test.find()\r\n```\r\nand, yeah, that worked.\r\n\r\nI don't really know if ORMs will read when connecting to the second replica, but for now it's fine as the main plan is on track.  \r\nSo, to promote I connected to the primary replica (mongo1) and ran the following command:\r\n\r\n```bash\r\n> rs.stepDown()\r\n```\r\nAnd that worked! Woo! The second replica is now the primary one. We can now start *drum rolls please*:\r\n\r\n## The migration\r\n\r\nThis is it. We're doing it.\r\n\r\nI went ahead and created a new docker-compose file on my server with the following content:\r\n\r\n```yml\r\nversion: \"3.8\"\r\nservices:\r\n    mongo:\r\n        image: mongo:4.4.17-rc0-focal\r\n        container_name: mongodb\r\n        restart: unless-stopped\r\n        ports:\r\n            - 27017:27017\r\n        volumes:\r\n            - ./mongo:/data/db\r\n        command: mongod --replSet rs0\r\n```\r\nAfter deploying the stack, I connected using mongosh to the primary db and ran the following command:\r\n```bash\r\n> rs.add(\"ip\")\r\n```\r\nand after waiting for a while it looked like it worked. I then connected to the new database and ran the following command to check if the replica cloned fine:\r\n```bash\r\n> db.getMongo().setReadPref(\"secondaryPreferred\")\r\n```\r\nand let's just let the results speak for themselves:\r\n```bash\r\nrs0 [direct: secondary] test> show dbs\r\n# author's note: some dbs are redacted for privacy reasons \r\nadmin         80.00 KiB\r\napi           80.00 KiB\r\nava           40.00 KiB\r\nbask         168.00 KiB\r\nconfig       144.00 KiB\r\nlocal        348.00 KiB\r\nvinci        428.00 KiB\r\nrs0 [direct: secondary] test> use vinci\r\nswitched to db vinci\r\nrs0 [direct: secondary] vinci> show tables\r\nafk\r\nbirthdays\r\nchatgpt\r\ngiveaways-enters\r\ngiveaways-message\r\npadyama\r\nsuggestions\r\ntwitter\r\nwarns\r\nyoutube\r\nrs0 [direct: secondary] vinci> db.afk.find()\r\n[\r\n  {\r\n    _id: ObjectId(\"sadfsad fsadfsdf\"),\r\n    id: 'redacted',\r\n    reason: 'redacted',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: ObjectId(\"asdfsadfadf\"),\r\n    id: 'redacted',\r\n    reason: 'readacted',\r\n    __v: 0\r\n  }\r\n]\r\nrs0 [direct: secondary] vinci>\r\n```\r\nNice. let's now try to write something to the database from Vinci:  \r\n![](https://img.srizan.dev/Discord_a2iXkWYxwn.png)  \r\nThat just worked and we can see it on the secondary replica:\r\n```bash\r\nrs0 [direct: secondary] vinci> db.afk.find({ id: '703974042700611634' })\r\n[\r\n  {\r\n    _id: ObjectId(\"6550eccc6154a8c9030fe76a\"),\r\n    id: '703974042700611634',\r\n    reason: 'test',\r\n    __v: 0\r\n  }\r\n]\r\n```\r\n\r\nLet's now edit all .envs and change the database url to the new secondary one. For this I checked all dbs that I have and then go from top to bottom editing the secrets.\r\n\r\nAfter that was done I needed to deploy all changes. I went ahead and created too many tabs on my terminal and ran the all deployment commands on each tab. At the same time.  \r\nI really hope that doesn't make my server run out of ram, because I'm really short on that.\r\n\r\nAfter executing all the commands I `rs.stepDown()`'ed the primary Raspberry Pi replica and, as expected, the HP Server took over.\r\n\r\nThe last command of the day:\r\n```bash\r\n> rs.remove(\"ip\")\r\n```\r\n\r\n...SIKE! I needed to check the logs of the containers to see if everything was working fine. The `api` and `vinci` to be exact.  \r\nThis is because `api` runs Prisma and `vinci` runs the now defunct in my stack, [mongoose](https://mongoosejs.com/).\r\n\r\nLuckily enough, both were fine, so I was free. Yay!\r\n\r\n## Conclusion\r\n\r\nWelp, that was a lot of work. I'm glad it's over. I got my HP server on July and it's now November and I just finished migrating.  \r\nCould I have done it in less time? Yes.  \r\nWas I lazy? Also yes.\r\n\r\nSo that answers all your questions.\r\n\r\nI hope you enjoyed this my first blog post, and thankfully it was a big one.  \r\nThis took 3 hours in total, but at the end of the day, it was worth it.\r\n\r\nI'll see you in the next one!","fileName":"src\\blog\\The-last-migration-mongodb.md"},{"id":1,"title":"Welcome to my new blog!","description":"This post welcomes you to my new blog","date":"20/08/2023","fileContent":"\r\n# Hey!\r\n\r\nThis is probably the last time I'm going to make a blog. I've made a few in the past, but I've never really stuck to them. I'm hoping that this time will be different.  \r\nThis one was made entirely from scratch using React and Markdown, initially trying to use MDX, but it was a pain to set up, and it didn't end up working in the end.  \r\nI'm hoping to post about my projects, and maybe some other stuff too. I'm not sure yet, but I'll figure it out as I go along.  \r\nAnyways, thank you for reading. I hope you enjoyed my UX/UI for this one!\r\n\r\nPD: I need some help for making the blog text look good and readable, so hit me up on my Discord if you have any ideas.","fileName":"src\\blog\\Hey.md"}]